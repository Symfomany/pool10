{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/app.ts","lib/boot.ts"],"names":[],"mappings":"AAAA;ACAA,8CAA8C;;AAK9C;;GAEG;AACH;IAME,YAAY,IAAW,EAAE,OAAc,EAAE,IAAQ;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,GAAO,CAAC;QACZ,IAAI,GAAG,GAAG,4CAA4C,CAAC;QACvD,CAAC,CAAC,OAAO,CAAE,GAAG,EAAE,UAAU,IAAI;YAC5B,GAAG,GAAG,IAAI,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAS,OAAW,EAAE,MAAU;YACxD,6CAA6C;YAC7C,8BAA8B;YAE5B,IAAI,GAAG,GAAG,4CAA4C,CAAC;YACvD,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YAC/B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACrB,GAAG,CAAC,MAAM,GAAG;gBACX,yCAAyC;gBACzC,0BAA0B;gBAC1B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBACtB,oDAAoD;oBACpD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACxB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,wCAAwC;oBACxC,gDAAgD;oBAChD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC,CAAC;YAEF,0BAA0B;YAC1B,GAAG,CAAC,OAAO,GAAG;gBACZ,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC;YACF,mBAAmB;YACnB,GAAG,CAAC,IAAI,EAAE,CAAC;QAGf,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,MAAM;YACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,2BAA2B;QAClD,CAAC,EAAE,UAAS,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB;QAC1C,CAAC,CAAC,CAAC;QAIH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;AAGH,CAAC;AA1DY,cAAM,SA0DlB,CAAA;;;;AClED,sBAAqB,OAErB,CAAC,CAF2B;AAE5B,IAAI,KAAK,GAAG,IAAI,YAAM,CAAC,MAAM,EAAC,MAAM,EAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;AAChE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../typings/index.d.ts\" />\n\nimport * as Default from \"./conf\";\n\n\n/**\n * class Animal\n */\nexport class Animal{\n\n  protected name:string;\n  protected couleur:string;\n  protected poid:any;\n\n  constructor(name:string, couleur:string, poid:any){\n    this.name = name;\n    this.couleur = couleur;\n    this.poid = poid;\n    console.log(_.range(4));\n    var tab:any;\n    var url = 'https://jsonplaceholder.typicode.com/users';\n    $.getJSON( url, function( data ) {\n      tab = data;\n    });\n\n    var promise = new Promise(function(resolve:any, reject:any):any {\n      // faire un truc, peut-être asynchrone, puis…\n      // Fais le boulot XHR habituel\n\n        let url = \"https://jsonplaceholder.typicode.com/users\";\n        var req = new XMLHttpRequest();\n        req.open('GET', url);\n        req.onload = function() {\n          // Ceci est appelé même pour une 404 etc.\n          // aussi vérifie le statut\n          if (req.status == 200) {\n            // Accomplit la promesse avec le texte de la réponse\n            resolve(req.response);\n          }\n          else {\n            // Sinon rejette avec le texte du statut\n            // qui on l’éspère sera une erreur ayant du sens\n            reject(Error(req.statusText));\n          }\n        };\n\n        // Gère les erreurs réseau\n        req.onerror = function() {\n          reject(Error(\"Erreur réseau\"));\n        };\n        // Lance la requête\n        req.send();\n\n\n    }).then(function(result) {\n      console.log(result); // \"Ces trucs ont marché !\"\n    }, function(err) {\n      console.log(err); // Error: \"Ça a foiré\"\n    });\n\n\n\n    console.log(tab);\n  }\n\n\n}\n","import {Animal} from './app'\n\nlet chien = new Animal(\"Moka\",\"noir\",{\"taille\": 30, poid: 1.5});\nconsole.log(chien);\nconsole.log('okayyy');\n"]}